@using HealthCheck.Data

<div style="display:flex;">
    @if (ResultSet?.Results.Any(result => result.Status == Status.Processing) == true)
    {
        <span class="spinner-grow spinner-grow-md" role="status" aria-hidden="true"></span>
    }
    else if (ResultSet?.Results.Any(result => result.Status == Status.Failure) == true)
    {
        <Icon Name="IconName.XCircleFill" Color="IconColor.Danger" Size="IconSize.x2" />
    }
    else if (ResultSet?.Results.All(result => result.Status == Status.Warning) == true)
    {
        <Icon Name="IconName.ExclamationTriangleFill" Color="IconColor.Warning" Size="IconSize.x2" />
    }
    else if (ResultSet?.Results.All(result => result.Status == Status.Success) == true)
    {
        <Icon Name="IconName.Check" Color="IconColor.Success" Size="IconSize.x2" />
    }
    <h3 style="padding-left:8px;">
        @this.ResultSet?.Name
    </h3>
</div>

@foreach (Result result in (ResultSet?.Results ?? new Result[0]))
{
    <ResultDisplay Result="@result" />
}

@code {
    [Parameter]
    public HealthCheck.Data.ResultSet ResultSet { get; set; }
}
